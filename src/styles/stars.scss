@use 'sass:math';
@use 'sass:string';

@function multiple-box-shadow($number_of_stars) {
  $value: "#{math.random(2000)}px #{math.random(2000)}px #FFF"; // Initial shadow
  @for $i from 2 through $number_of_stars {
    $value: "#{$value}, #{math.random(2000)}px #{math.random(2000)}px #FFF"; // Add more shadows
  }
  @return string.unquote($value); // Return the concatenated value
}

$shadows-small: multiple-box-shadow(700); // Small stars
$shadows-medium: multiple-box-shadow(200); // Medium stars
$shadows-big: multiple-box-shadow(100); // Big stars

#stars1 {
    box-shadow: $shadows-small; // Apply small star shadows
    animation: animStar 50s linear infinite;
    &::after {
      box-shadow: $shadows-small; // Apply small star shadows to pseudo-element
    }
}
#stars2 {
    width: 2px;
    height: 2px;
    box-shadow: $shadows-medium; // Apply medium star shadows
    animation: animStar 100s linear infinite;
    &::after {
      width: 2px;
      height: 2px;
      box-shadow: $shadows-medium; // Apply medium star shadows to pseudo-element
    }
}
#stars3 {
    width: 3px;
    height: 3px;
    box-shadow: $shadows-big; // Apply big star shadows
    animation: animStar 150s linear infinite;
    &::after {
        width: 3px;
        height: 3px;
        box-shadow: $shadows-big; // Apply big star shadows to pseudo-element
    }
}

@keyframes animStar {
  from {
    transform: translateY(-1000px);
  }
  to {
    transform: translateY(-3000px);
  }
}